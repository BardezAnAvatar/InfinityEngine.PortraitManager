//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4927
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace IE_Portrait_Manager.ConfigSections
{
    
    
    /// <summary>
    /// A collection of Game instances.
    /// </summary>
    [global::System.Configuration.ConfigurationCollectionAttribute(typeof(global::IE_Portrait_Manager.ConfigSections.Game), CollectionType=global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate, AddItemName=global::IE_Portrait_Manager.ConfigSections.InfinityEngineGamesCollection.GamePropertyName)]
    public partial class InfinityEngineGamesCollection : global::System.Configuration.ConfigurationElementCollection
    {
        
        #region Constants
        /// <summary>
        /// The XML name of the individual <see cref="global::IE_Portrait_Manager.ConfigSections.Game"/> instances in this collection.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        internal const string GamePropertyName = "Game";
        #endregion
        
        #region Overrides
        /// <summary>
        /// Gets the type of the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <returns>The <see cref="global::System.Configuration.ConfigurationElementCollectionType"/> of this collection.</returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        public override global::System.Configuration.ConfigurationElementCollectionType CollectionType
        {
            get
            {
                return global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate;
            }
        }
        
        /// <summary>
        /// Gets the name used to identify this collection of elements
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        protected override string ElementName
        {
            get
            {
                return global::IE_Portrait_Manager.ConfigSections.InfinityEngineGamesCollection.GamePropertyName;
            }
        }
        
        /// <summary>
        /// Indicates whether the specified <see cref="global::System.Configuration.ConfigurationElement"/> exists in the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="elementName">The name of the element to verify.</param>
        /// <returns>
        /// <see langword="true"/> if the element exists in the collection; otherwise, <see langword="false"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        protected override bool IsElementName(string elementName)
        {
            return (elementName == global::IE_Portrait_Manager.ConfigSections.InfinityEngineGamesCollection.GamePropertyName);
        }
        
        /// <summary>
        /// Gets the element key for the specified configuration element.
        /// </summary>
        /// <param name="element">The <see cref="global::System.Configuration.ConfigurationElement"/> to return the key for.</param>
        /// <returns>
        /// An <see cref="object"/> that acts as the key for the specified <see cref="global::System.Configuration.ConfigurationElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        protected override object GetElementKey(global::System.Configuration.ConfigurationElement element)
        {
            return ((global::IE_Portrait_Manager.ConfigSections.Game)(element)).Name;
        }
        
        /// <summary>
        /// Creates a new <see cref="global::IE_Portrait_Manager.ConfigSections.Game"/>.
        /// </summary>
        /// <returns>
        /// A new <see cref="global::IE_Portrait_Manager.ConfigSections.Game"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        protected override global::System.Configuration.ConfigurationElement CreateNewElement()
        {
            return new global::IE_Portrait_Manager.ConfigSections.Game();
        }
        #endregion
        
        #region Indexer
        /// <summary>
        /// Gets the <see cref="global::IE_Portrait_Manager.ConfigSections.Game"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::IE_Portrait_Manager.ConfigSections.Game"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        public global::IE_Portrait_Manager.ConfigSections.Game this[int index]
        {
            get
            {
                return ((global::IE_Portrait_Manager.ConfigSections.Game)(base.BaseGet(index)));
            }
        }
        
        /// <summary>
        /// Gets the <see cref="global::IE_Portrait_Manager.ConfigSections.Game"/> with the specified key.
        /// </summary>
        /// <param name="Name">The key of the <see cref="global::IE_Portrait_Manager.ConfigSections.Game"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        public global::IE_Portrait_Manager.ConfigSections.Game this[object Name]
        {
            get
            {
                return ((global::IE_Portrait_Manager.ConfigSections.Game)(base.BaseGet(Name)));
            }
        }
        #endregion
        
        #region Add
        /// <summary>
        /// Adds the specified <see cref="global::IE_Portrait_Manager.ConfigSections.Game"/> to the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="Game">The <see cref="global::IE_Portrait_Manager.ConfigSections.Game"/> to add.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        public void Add(global::IE_Portrait_Manager.ConfigSections.Game Game)
        {
            base.BaseAdd(Game);
        }
        #endregion
        
        #region Remove
        /// <summary>
        /// Removes the specified <see cref="global::IE_Portrait_Manager.ConfigSections.Game"/> from the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="Game">The <see cref="global::IE_Portrait_Manager.ConfigSections.Game"/> to remove.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        public void Remove(global::IE_Portrait_Manager.ConfigSections.Game Game)
        {
            base.BaseRemove(this.GetElementKey(Game));
        }
        #endregion
        
        #region GetItem
        /// <summary>
        /// Gets the <see cref="global::IE_Portrait_Manager.ConfigSections.Game"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::IE_Portrait_Manager.ConfigSections.Game"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        public global::IE_Portrait_Manager.ConfigSections.Game GetItemAt(int index)
        {
            return ((global::IE_Portrait_Manager.ConfigSections.Game)(base.BaseGet(index)));
        }
        
        /// <summary>
        /// Gets the <see cref="global::IE_Portrait_Manager.ConfigSections.Game"/> with the specified key.
        /// </summary>
        /// <param name="Name">The key of the <see cref="global::IE_Portrait_Manager.ConfigSections.Game"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        public global::IE_Portrait_Manager.ConfigSections.Game GetItemByKey(string Name)
        {
            return ((global::IE_Portrait_Manager.ConfigSections.Game)(base.BaseGet(((object)(Name)))));
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
    }
}
namespace IE_Portrait_Manager.ConfigSections
{
    
    
    /// <summary>
    /// The InfinityEngineGameSettings Configuration Section.
    /// </summary>
    public partial class InfinityEngineGameSettings : global::System.Configuration.ConfigurationSection
    {
        
        #region Singleton Instance
        /// <summary>
        /// The XML name of the InfinityEngineGameSettings Configuration Section.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        internal const string InfinityEngineGameSettingsSectionName = "InfinityEngineGameSettings";
        
        /// <summary>
        /// Gets the InfinityEngineGameSettings instance.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        public static global::IE_Portrait_Manager.ConfigSections.InfinityEngineGameSettings Instance
        {
            get
            {
                return ((global::IE_Portrait_Manager.ConfigSections.InfinityEngineGameSettings)(global::System.Configuration.ConfigurationManager.GetSection(global::IE_Portrait_Manager.ConfigSections.InfinityEngineGameSettings.InfinityEngineGameSettingsSectionName)));
            }
        }
        #endregion
        
        #region Xmlns Property
        /// <summary>
        /// The XML name of the <see cref="Xmlns"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        internal const string XmlnsPropertyName = "xmlns";
        
        /// <summary>
        /// Gets the XML namespace of this Configuration Section.
        /// </summary>
        /// <remarks>
        /// This property makes sure that if the configuration file contains the XML namespace,
        /// the parser doesn't throw an exception because it encounters the unknown "xmlns" attribute.
        /// </remarks>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::IE_Portrait_Manager.ConfigSections.InfinityEngineGameSettings.XmlnsPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public string Xmlns
        {
            get
            {
                return ((string)(base[global::IE_Portrait_Manager.ConfigSections.InfinityEngineGameSettings.XmlnsPropertyName]));
            }
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Games Property
        /// <summary>
        /// The XML name of the <see cref="Games"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        internal const string GamesPropertyName = "Games";
        
        /// <summary>
        /// Gets or sets the Games.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The Games.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::IE_Portrait_Manager.ConfigSections.InfinityEngineGameSettings.GamesPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public global::IE_Portrait_Manager.ConfigSections.InfinityEngineGamesCollection Games
        {
            get
            {
                return ((global::IE_Portrait_Manager.ConfigSections.InfinityEngineGamesCollection)(base[global::IE_Portrait_Manager.ConfigSections.InfinityEngineGameSettings.GamesPropertyName]));
            }
            set
            {
                base[global::IE_Portrait_Manager.ConfigSections.InfinityEngineGameSettings.GamesPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace IE_Portrait_Manager.ConfigSections
{
    
    
    /// <summary>
    /// A collection of Portrait instances.
    /// </summary>
    [global::System.Configuration.ConfigurationCollectionAttribute(typeof(global::IE_Portrait_Manager.ConfigSections.Portrait), CollectionType=global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate, AddItemName=global::IE_Portrait_Manager.ConfigSections.Game.PortraitPropertyName)]
    public partial class Game : global::System.Configuration.ConfigurationElementCollection
    {
        
        #region Constants
        /// <summary>
        /// The XML name of the individual <see cref="global::IE_Portrait_Manager.ConfigSections.Portrait"/> instances in this collection.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        internal const string PortraitPropertyName = "Portrait";
        #endregion
        
        #region Overrides
        /// <summary>
        /// Gets the type of the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <returns>The <see cref="global::System.Configuration.ConfigurationElementCollectionType"/> of this collection.</returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        public override global::System.Configuration.ConfigurationElementCollectionType CollectionType
        {
            get
            {
                return global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate;
            }
        }
        
        /// <summary>
        /// Gets the name used to identify this collection of elements
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        protected override string ElementName
        {
            get
            {
                return global::IE_Portrait_Manager.ConfigSections.Game.PortraitPropertyName;
            }
        }
        
        /// <summary>
        /// Indicates whether the specified <see cref="global::System.Configuration.ConfigurationElement"/> exists in the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="elementName">The name of the element to verify.</param>
        /// <returns>
        /// <see langword="true"/> if the element exists in the collection; otherwise, <see langword="false"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        protected override bool IsElementName(string elementName)
        {
            return (elementName == global::IE_Portrait_Manager.ConfigSections.Game.PortraitPropertyName);
        }
        
        /// <summary>
        /// Gets the element key for the specified configuration element.
        /// </summary>
        /// <param name="element">The <see cref="global::System.Configuration.ConfigurationElement"/> to return the key for.</param>
        /// <returns>
        /// An <see cref="object"/> that acts as the key for the specified <see cref="global::System.Configuration.ConfigurationElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        protected override object GetElementKey(global::System.Configuration.ConfigurationElement element)
        {
            return ((global::IE_Portrait_Manager.ConfigSections.Portrait)(element)).Size;
        }
        
        /// <summary>
        /// Creates a new <see cref="global::IE_Portrait_Manager.ConfigSections.Portrait"/>.
        /// </summary>
        /// <returns>
        /// A new <see cref="global::IE_Portrait_Manager.ConfigSections.Portrait"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        protected override global::System.Configuration.ConfigurationElement CreateNewElement()
        {
            return new global::IE_Portrait_Manager.ConfigSections.Portrait();
        }
        #endregion
        
        #region Indexer
        /// <summary>
        /// Gets the <see cref="global::IE_Portrait_Manager.ConfigSections.Portrait"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::IE_Portrait_Manager.ConfigSections.Portrait"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        public global::IE_Portrait_Manager.ConfigSections.Portrait this[int index]
        {
            get
            {
                return ((global::IE_Portrait_Manager.ConfigSections.Portrait)(base.BaseGet(index)));
            }
        }
        
        /// <summary>
        /// Gets the <see cref="global::IE_Portrait_Manager.ConfigSections.Portrait"/> with the specified key.
        /// </summary>
        /// <param name="size">The key of the <see cref="global::IE_Portrait_Manager.ConfigSections.Portrait"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        public global::IE_Portrait_Manager.ConfigSections.Portrait this[object size]
        {
            get
            {
                return ((global::IE_Portrait_Manager.ConfigSections.Portrait)(base.BaseGet(size)));
            }
        }
        #endregion
        
        #region Add
        /// <summary>
        /// Adds the specified <see cref="global::IE_Portrait_Manager.ConfigSections.Portrait"/> to the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="Portrait">The <see cref="global::IE_Portrait_Manager.ConfigSections.Portrait"/> to add.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        public void Add(global::IE_Portrait_Manager.ConfigSections.Portrait Portrait)
        {
            base.BaseAdd(Portrait);
        }
        #endregion
        
        #region Remove
        /// <summary>
        /// Removes the specified <see cref="global::IE_Portrait_Manager.ConfigSections.Portrait"/> from the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="Portrait">The <see cref="global::IE_Portrait_Manager.ConfigSections.Portrait"/> to remove.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        public void Remove(global::IE_Portrait_Manager.ConfigSections.Portrait Portrait)
        {
            base.BaseRemove(this.GetElementKey(Portrait));
        }
        #endregion
        
        #region GetItem
        /// <summary>
        /// Gets the <see cref="global::IE_Portrait_Manager.ConfigSections.Portrait"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::IE_Portrait_Manager.ConfigSections.Portrait"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        public global::IE_Portrait_Manager.ConfigSections.Portrait GetItemAt(int index)
        {
            return ((global::IE_Portrait_Manager.ConfigSections.Portrait)(base.BaseGet(index)));
        }
        
        /// <summary>
        /// Gets the <see cref="global::IE_Portrait_Manager.ConfigSections.Portrait"/> with the specified key.
        /// </summary>
        /// <param name="size">The key of the <see cref="global::IE_Portrait_Manager.ConfigSections.Portrait"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        public global::IE_Portrait_Manager.ConfigSections.Portrait GetItemByKey(string size)
        {
            return ((global::IE_Portrait_Manager.ConfigSections.Portrait)(base.BaseGet(((object)(size)))));
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Name Property
        /// <summary>
        /// The XML name of the <see cref="Name"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        internal const string NamePropertyName = "Name";
        
        /// <summary>
        /// Gets or sets the Name.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The Name.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::IE_Portrait_Manager.ConfigSections.Game.NamePropertyName, IsRequired=true, IsKey=true, IsDefaultCollection=false)]
        public string Name
        {
            get
            {
                return ((string)(base[global::IE_Portrait_Manager.ConfigSections.Game.NamePropertyName]));
            }
            set
            {
                base[global::IE_Portrait_Manager.ConfigSections.Game.NamePropertyName] = value;
            }
        }
        #endregion
    }
}
namespace IE_Portrait_Manager.ConfigSections
{
    
    
    /// <summary>
    /// The Portrait Configuration Element.
    /// </summary>
    public partial class Portrait : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Size Property
        /// <summary>
        /// The XML name of the <see cref="Size"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        internal const string SizePropertyName = "size";
        
        /// <summary>
        /// Gets or sets the Size.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The Size.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::IE_Portrait_Manager.ConfigSections.Portrait.SizePropertyName, IsRequired=true, IsKey=true, IsDefaultCollection=false)]
        public string Size
        {
            get
            {
                return ((string)(base[global::IE_Portrait_Manager.ConfigSections.Portrait.SizePropertyName]));
            }
            set
            {
                base[global::IE_Portrait_Manager.ConfigSections.Portrait.SizePropertyName] = value;
            }
        }
        #endregion
        
        #region Height Property
        /// <summary>
        /// The XML name of the <see cref="Height"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        internal const string HeightPropertyName = "height";
        
        /// <summary>
        /// Gets or sets the Height.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The Height.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::IE_Portrait_Manager.ConfigSections.Portrait.HeightPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public int Height
        {
            get
            {
                return ((int)(base[global::IE_Portrait_Manager.ConfigSections.Portrait.HeightPropertyName]));
            }
            set
            {
                base[global::IE_Portrait_Manager.ConfigSections.Portrait.HeightPropertyName] = value;
            }
        }
        #endregion
        
        #region Width Property
        /// <summary>
        /// The XML name of the <see cref="Width"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        internal const string WidthPropertyName = "width";
        
        /// <summary>
        /// Gets or sets the Width.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The Width.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::IE_Portrait_Manager.ConfigSections.Portrait.WidthPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public int Width
        {
            get
            {
                return ((int)(base[global::IE_Portrait_Manager.ConfigSections.Portrait.WidthPropertyName]));
            }
            set
            {
                base[global::IE_Portrait_Manager.ConfigSections.Portrait.WidthPropertyName] = value;
            }
        }
        #endregion
        
        #region ActualHeight Property
        /// <summary>
        /// The XML name of the <see cref="ActualHeight"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        internal const string ActualHeightPropertyName = "actualHeight";
        
        /// <summary>
        /// Gets or sets the ActualHeight.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The ActualHeight.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::IE_Portrait_Manager.ConfigSections.Portrait.ActualHeightPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false, DefaultValue=0)]
        public int ActualHeight
        {
            get
            {
                return ((int)(base[global::IE_Portrait_Manager.ConfigSections.Portrait.ActualHeightPropertyName]));
            }
            set
            {
                base[global::IE_Portrait_Manager.ConfigSections.Portrait.ActualHeightPropertyName] = value;
            }
        }
        #endregion
        
        #region ActualWidth Property
        /// <summary>
        /// The XML name of the <see cref="ActualWidth"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        internal const string ActualWidthPropertyName = "actualWidth";
        
        /// <summary>
        /// Gets or sets the ActualWidth.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The ActualWidth.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::IE_Portrait_Manager.ConfigSections.Portrait.ActualWidthPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false, DefaultValue=0)]
        public int ActualWidth
        {
            get
            {
                return ((int)(base[global::IE_Portrait_Manager.ConfigSections.Portrait.ActualWidthPropertyName]));
            }
            set
            {
                base[global::IE_Portrait_Manager.ConfigSections.Portrait.ActualWidthPropertyName] = value;
            }
        }
        #endregion
        
        #region ImageFormat Property
        /// <summary>
        /// The XML name of the <see cref="ImageFormat"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        internal const string ImageFormatPropertyName = "imageFormat";
        
        /// <summary>
        /// Gets or sets the ImageFormat.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The ImageFormat.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::IE_Portrait_Manager.ConfigSections.Portrait.ImageFormatPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public string ImageFormat
        {
            get
            {
                return ((string)(base[global::IE_Portrait_Manager.ConfigSections.Portrait.ImageFormatPropertyName]));
            }
            set
            {
                base[global::IE_Portrait_Manager.ConfigSections.Portrait.ImageFormatPropertyName] = value;
            }
        }
        #endregion
    }
}
